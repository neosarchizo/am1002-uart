#include <AM1002_UART.h>
#include <HardwareSerial.h> // use for enable UART serial communication

AM1002_UART am1002(&Serial); // use Serial for AM1002, connected to pins 16 (RX2) and 17 (TX2)
char version[14];
uint8_t serialNumber[10];

void setup() {
  Serial.begin(9600);   // initialize serial communication for debugging
  Serial.begin(9600, SERIAL_8N1, 16, 17); // initialize hardware serial for AM1002
  
  while (!Serial) {  // Wait for serial connection
    delay(10);
  }
}

void loop() {
  bool success = am1002.measure();

  if (success) {
    Serial.print("TVOC: ");
    Serial.println(am1002.getTvoc()); //TVOC Reading

    Serial.print("PM 1.0: ");
    Serial.println(am1002.getPm1p0()); //PM1.0 Reading

    Serial.print("PM 2.5: ");
    Serial.println(am1002.getPm2p5()); // PM2.5 Reading

    Serial.print("PM 10: ");
    Serial.println(am1002.getPm10()); //PM10 Reading

    Serial.print("Temperature: ");
    Serial.println(am1002.getTemperature()); // Temperature Reading

    Serial.print("Humidity: ");
    Serial.println(am1002.getHumidity()); // Humidity Reading
  } else {
    Serial.println("Failed to measure sensor data"); // debug message
  }
  
  success = am1002.requestSoftwareVersionNumber(); // software version number of AM1002

  if (success) {
    am1002.readSoftwareVersionNumber(version);
    Serial.print("Version: ");
    Serial.println(version);
  }

  success = am1002.requestSerialNumber(); // request serial number

  if(success) {
    am1002.readSerialNumber(serialNumber);
    Serial.print("Serial Number: ");

    Serial.print((serialNumber[0] << 8) + serialNumber[1]);
    Serial.print(" ");

    Serial.print((serialNumber[2] << 8) + serialNumber[3]);
    Serial.print(" ");

    Serial.print((serialNumber[4] << 8) + serialNumber[5]);
    Serial.print(" ");

    Serial.print((serialNumber[6] << 8) + serialNumber[7]);
    Serial.print(" ");

    Serial.println((serialNumber[8] << 8) + serialNumber[9]);
  }
  delay(3000);
}
